name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Generate config file
        run: |
          echo "Generating config.js..."
          echo "const config = {
            firebase: {
              apiKey: '${FIREBASE_API_KEY}',
              authDomain: '${FIREBASE_AUTH_DOMAIN}',
              databaseURL: '${FIREBASE_DATABASE_URL}',
              projectId: '${FIREBASE_PROJECT_ID}',
              storageBucket: '${FIREBASE_STORAGE_BUCKET}',
              messagingSenderId: '${FIREBASE_MESSAGING_SENDER_ID}',
              appId: '${FIREBASE_APP_ID}',
              measurementId: '${FIREBASE_MEASUREMENT_ID}'
            },
            cloudinary: {
              cloudName: '${CLOUDINARY_CLOUD_NAME}',
              apiKey: '${CLOUDINARY_API_KEY}',
              apiSecret: '${CLOUDINARY_API_SECRET}'
            }
          };" > config.js
          echo "Config.js generated successfully"
        env:
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_DATABASE_URL: ${{ secrets.FIREBASE_DATABASE_URL }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
          CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
          CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}

      - name: Verify files before deploy
        run: |
          echo "Current directory contents:"
          ls -la
          echo "Config.js contents:"
          cat config.js

      - name: Create .nojekyll
        run: touch .nojekyll

      - name: Prepare for deployment
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add -f config.js
          git add .nojekyll
          git commit -m "Add config.js and .nojekyll" || echo "No changes to commit"

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .
          force_orphan: true
          commit_message: "Deploy with config.js"
          enable_jekyll: false

      - name: Verify deployment
        run: |
          sleep 30
          echo "Checking deployment..."
          curl -I https://loimio.github.io/Mio/config.js || true 
